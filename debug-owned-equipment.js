/**
 * Debug Script: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á
 * 
 * ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ:
 * node debug-owned-equipment.js <serialNumber>
 * 
 * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:
 * node debug-owned-equipment.js 21216
 */

const mongoose = require('mongoose');
require('dotenv').config();

// MongoDB Connection
const MONGODB_URI = process.env.MONGODB_URI;

async function debugOwnedEquipment(serialNumber) {
  try {
    console.log('üîå ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n');

    // ‚úÖ ‡∏´‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ï‡∏≤‡∏° Serial Number
    const InventoryItem = mongoose.connection.collection('inventoryitems');
    const item = await InventoryItem.findOne({ serialNumber: serialNumber });

    if (!item) {
      console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ Serial Number: ${serialNumber}`);
      return;
    }

    console.log('üì¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå (SN: ' + serialNumber + ')');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('ID:', item._id);
    console.log('‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:', item.itemName);
    console.log('‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ID:', item.categoryId);
    console.log('Serial Number:', item.serialNumber);
    console.log('‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ID:', item.statusId);
    console.log('‡∏™‡∏†‡∏≤‡∏û ID:', item.conditionId);
    console.log('');
    console.log('üîç currentOwnership:');
    console.log('   ownerType:', item.currentOwnership?.ownerType || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   userId:', item.currentOwnership?.userId || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   ownedSince:', item.currentOwnership?.ownedSince || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   assignedBy:', item.currentOwnership?.assignedBy || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('');
    console.log('üìã sourceInfo:');
    console.log('   addedBy:', item.sourceInfo?.addedBy || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   addedByUserId:', item.sourceInfo?.addedByUserId || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   dateAdded:', item.sourceInfo?.dateAdded || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   initialOwnerType:', item.sourceInfo?.initialOwnerType || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   acquisitionMethod:', item.sourceInfo?.acquisitionMethod || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('');
    console.log('üîÑ transferInfo:');
    console.log('   transferredFrom:', item.transferInfo?.transferredFrom || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   transferDate:', item.transferInfo?.transferDate || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   approvedBy:', item.transferInfo?.approvedBy || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   requestId:', item.transferInfo?.requestId || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('');
    console.log('üë§ requesterInfo:');
    console.log('   firstName:', item.requesterInfo?.firstName || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   lastName:', item.requesterInfo?.lastName || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   nickname:', item.requesterInfo?.nickname || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   department:', item.requesterInfo?.department || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   phone:', item.requesterInfo?.phone || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('   office:', item.requesterInfo?.office || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
    console.log('');
    console.log('üóëÔ∏è deletedAt:', item.deletedAt || '‡πÑ‡∏°‡πà‡∏°‡∏µ (‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏ö)');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Dashboard ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    console.log('üìä ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    
    const ownerType = item.currentOwnership?.ownerType;
    const userId = item.currentOwnership?.userId;
    const deletedAt = item.deletedAt;
    const acquisitionMethod = item.sourceInfo?.acquisitionMethod;

    if (deletedAt) {
      console.log('‚ùå ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Dashboard');
    } else if (ownerType !== 'user_owned') {
      console.log(`‚ùå ownerType: "${ownerType}" (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà "user_owned") ‚Üí ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Dashboard`);
    } else if (!userId) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ userId ‚Üí ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Dashboard');
    } else {
      console.log(`‚úÖ ownerType: "${ownerType}" ‚Üí ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Dashboard`);
      console.log(`‚úÖ userId: "${userId}"`);
      console.log(`‚úÖ acquisitionMethod: "${acquisitionMethod || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}"`);
      console.log('');
      console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö source ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á:');
      if (acquisitionMethod === 'self_reported') {
        console.log('   ‚Üí source: "user-owned" (‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)');
      } else {
        console.log('   ‚Üí source: "request" (‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)');
      }
    }

    // ‚úÖ ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    console.log('\nüë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    
    if (userId) {
      const User = mongoose.connection.collection('users');
      const user = await User.findOne({ _id: new mongoose.Types.ObjectId(userId) });
      
      if (user) {
        console.log('ID:', user._id);
        console.log('Email:', user.email);
        console.log('‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:', `${user.firstName || ''} ${user.lastName || ''}`);
        console.log('‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô:', user.nickname || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
        console.log('‡πÅ‡∏ú‡∏ô‡∏Å:', user.department || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
        console.log('‡∏™‡∏≤‡∏Ç‡∏≤:', user.office || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
        console.log('‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:', user.phone || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
        console.log('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:', user.userType || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
      } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö (userId: ' + userId + ')');
      }
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ userId');
    }

    // ‚úÖ ‡∏´‡∏≤ RequestLog ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
    if (item.transferInfo?.requestId) {
      console.log('\nüìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• RequestLog:');
      console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
      
      const RequestLog = mongoose.connection.collection('requestlogs');
      const requestLog = await RequestLog.findOne({ _id: new mongoose.Types.ObjectId(item.transferInfo.requestId) });
      
      if (requestLog) {
        console.log('ID:', requestLog._id);
        console.log('‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:', requestLog.status);
        console.log('userId:', requestLog.userId);
        console.log('deliveryLocation:', requestLog.deliveryLocation || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
        console.log('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:', requestLog.createdAt);
        console.log('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:', requestLog.approvedAt || '‡πÑ‡∏°‡πà‡∏°‡∏µ');
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö items ‡πÉ‡∏ô requestLog
        console.log('\nüì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô RequestLog:');
        requestLog.items?.forEach((reqItem, idx) => {
          console.log(`   ${idx + 1}. ${reqItem.itemName || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠'}`);
          console.log(`      assignedItemIds: ${reqItem.assignedItemIds ? `[${reqItem.assignedItemIds.join(', ')}]` : '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
          console.log(`      assignedQuantity: ${reqItem.assignedQuantity || 0}`);
          
          // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ itemId ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô assignedItemIds ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
          if (reqItem.assignedItemIds?.includes(item._id.toString())) {
            console.log(`      ‚úÖ ‡∏û‡∏ö itemId (${item._id}) ‡πÉ‡∏ô assignedItemIds`);
          }
        });
      } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö RequestLog (requestId: ' + item.transferInfo.requestId + ')');
      }
    }

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ReturnLog
    console.log('\nüîô ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ReturnLog:');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    
    const ReturnLog = mongoose.connection.collection('returnlogs');
    const returnLogs = await ReturnLog.find({ 
      userId: userId,
      'items.itemId': item._id.toString()
    }).toArray();
    
    if (returnLogs.length > 0) {
      console.log(`‡∏û‡∏ö ${returnLogs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô:`);
      returnLogs.forEach((returnLog, idx) => {
        const returnItem = returnLog.items.find(i => i.itemId === item._id.toString());
        console.log(`\n   ${idx + 1}. ReturnLog ID: ${returnLog._id}`);
        console.log(`      status: ${returnLog.status}`);
        console.log(`      approvalStatus: ${returnItem?.approvalStatus || '‡πÑ‡∏°‡πà‡∏°‡∏µ'}`);
        console.log(`      ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á: ${returnLog.createdAt}`);
        
        if (returnItem?.approvalStatus === 'approved') {
          console.log('      ‚ùå ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß (approved) ‚Üí ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Dashboard');
        } else if (returnItem?.approvalStatus === 'pending') {
          console.log('      ‚è≥ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏∑‡∏ô (pending) ‚Üí ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á badge "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Ñ‡∏∑‡∏ô"');
        }
      });
    } else {
      console.log('‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô ‚Üí ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
    }

    console.log('\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡πÅ‡∏•‡πâ‡∏ß');
  }
}

// ‡∏£‡∏±‡∏ö Serial Number ‡∏à‡∏≤‡∏Å command line
const serialNumber = process.argv[2];

if (!serialNumber) {
  console.error('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ Serial Number');
  console.log('‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: node debug-owned-equipment.js <serialNumber>');
  console.log('‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: node debug-owned-equipment.js 21216');
  process.exit(1);
}

debugOwnedEquipment(serialNumber);

