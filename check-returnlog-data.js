const mongoose = require('mongoose');

const MONGODB_URI = 'mongodb+srv://cluster0.r3yibxs.mongodb.net/inventory-management';

async function checkReturnLogData() {
  try {
    console.log('üîå ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n');

    const ReturnLog = mongoose.model('ReturnLog', new mongoose.Schema({}, { strict: false }), 'returnlogs');

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ReturnLog ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    const returnLogs = await ReturnLog.find({})
      .sort({ createdAt: -1 })
      .limit(10)
      .lean();

    console.log('üìã ReturnLog ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:\n');
    
    returnLogs.forEach((log, index) => {
      console.log(`\n=== ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà ${index + 1} ===`);
      console.log('_id:', log._id);
      console.log('userId:', log.userId);
      console.log('returnerFirstName:', log.returnerFirstName);
      console.log('returnerLastName:', log.returnerLastName);
      console.log('returnerNickname:', log.returnerNickname);
      console.log('returnerDepartment:', log.returnerDepartment);
      console.log('returnerPhone:', log.returnerPhone);
      console.log('returnerOffice:', log.returnerOffice);
      console.log('returnDate:', log.returnDate);
      console.log('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:', log.items?.length || 0);
      
      // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
      if (log.items && log.items.length > 0) {
        log.items.forEach((item, i) => {
          console.log(`  ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${i + 1}:`, item.itemName || item.itemId, 
                     `(SN: ${item.serialNumber || '-'}, Phone: ${item.numberPhone || '-'})`);
        });
      }
    });

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ userId ‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô
    console.log('\n\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° userId:');
    const userIdGroups = returnLogs.reduce((acc, log) => {
      if (!acc[log.userId]) {
        acc[log.userId] = [];
      }
      acc[log.userId].push({
        _id: log._id,
        name: `${log.returnerFirstName || '-'} ${log.returnerLastName || '-'}`,
        nickname: log.returnerNickname,
        department: log.returnerDepartment,
        phone: log.returnerPhone,
        office: log.returnerOffice,
        date: log.returnDate
      });
      return acc;
    }, {});

    Object.entries(userIdGroups).forEach(([userId, logs]) => {
      console.log(`\nüë§ userId: ${userId} (${logs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)`);
      logs.forEach((log, i) => {
        console.log(`  ${i + 1}. ${log.name} (${log.nickname}) - ${log.department} - ${log.phone}`);
        console.log(`     ‡∏™‡∏≤‡∏Ç‡∏≤: ${log.office}, ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date(log.date).toLocaleDateString('th-TH')}`);
      });
    });

    await mongoose.disconnect();
    console.log('\n\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
    await mongoose.disconnect();
  }
}

checkReturnLogData();

