/**
 * üßπ API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î Collection inventoryconfigs
 * 
 * ‡∏•‡∏ö fields ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô:
 * - statuses (‡πÄ‡∏Å‡πà‡∏≤)
 * - createdAt/updatedAt (redundant)
 * - __v (Mongoose version)
 */

import { NextRequest, NextResponse } from 'next/server';
import cleanup from '@/scripts/cleanup-inventory-config';

export async function POST(request: NextRequest) {
  try {
    console.log('üßπ API: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î Collection inventoryconfigs');
    
    await cleanup();
    
    return NextResponse.json({
      success: true,
      message: '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î Collection inventoryconfigs ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('‚ùå API Cleanup Error:', error);
    
    return NextResponse.json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î',
      error: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 });
  }
}
