/**
 * üßπ API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πâ‡∏≤‡∏á cache ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
 */

import { NextRequest, NextResponse } from 'next/server';
import { setCachedData } from '@/lib/cache-utils';

export async function POST(request: NextRequest) {
  try {
    console.log('üßπ Clearing all caches...');
    
    // ‡∏•‡πâ‡∏≤‡∏á cache ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    setCachedData('inventory_config', null);
    setCachedData('inventory_items', null);
    setCachedData('inventory_masters', null);
    
    console.log('‚úÖ All caches cleared successfully');
    
    return NextResponse.json({
      success: true,
      message: '‡∏•‡πâ‡∏≤‡∏á cache ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('‚ùå Clear cache error:', error);
    
    return NextResponse.json({
      success: false,
      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á cache',
      error: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 });
  }
}